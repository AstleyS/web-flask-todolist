name: Deploy to Heroku

on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest  # Use the latest Ubuntu environment

    env:
      HEROKU_APP_NAME: web-flask-todolist
      GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
      HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Use Python 3.9

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Install Heroku CLI
      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh

      # Step 5: Log in to Heroku
      - name: Log in to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ env.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          justlogin: true

      # Step 6: Verify Heroku login
      - name: Verify Heroku login
        run: heroku auth:whoami

      # Step 7: Configure Git
      - name: Configure Git
        run: |
          git config --global user.email ${{ env.HEROKU_EMAIL }}
          git config --global user.name ${{ env.GIT_USERNAME }}
          git config --global init.defaultBranch main
          git config --global pull.rebase false

      # Step 8: Add Heroku remote
      - name: Add Heroku remote
        run: git remote add heroku https://git.heroku.com/${{ env.HEROKU_APP_NAME }}.git

      # Step 9: Pull latest changes from Heroku
      - name: Pull latest changes from Heroku
        run: git pull heroku main --allow-unrelated-histories

      # Step 10: Commit and push changes to Heroku
      - name: Commit and push changes
        run: |
          git add .
          git commit -m "Deploy to Heroku" || echo "No changes to commit"
          git push heroku main

      # Step 11: Confirm successful deployment
      - name: Verify Deployment
        run: heroku open -a ${{ env.HEROKU_APP_NAME }}